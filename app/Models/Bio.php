<?php
/**
 * Created by PhpStorm.
 * User: Babatunde Adelabu
 * Date: 9/3/18
 * Time: 6:42 PM
 */

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Backpack\CRUD\CrudTrait;
use Illuminate\Support\Facades\Storage;
use JD\Cloudder\Facades\Cloudder;
use App\Helpers\Helper;

class Bio extends Model
{
    use CrudTrait;

    /*
    |--------------------------------------------------------------------------
    | GLOBAL VARIABLES
    |--------------------------------------------------------------------------
    */

    protected $table = 'bio';
    protected $primaryKey = 'id';
    // public $timestamps = false;
    // protected $guarded = ['id'];
    protected $fillable = ['first_name', 'other_name', 'last_name', 'bio_description', 'gender', 'date_of_birth', 'residential_address', 'current_location', 'state_of_origin', 'nationality', 'profile_picture', 'email', 'phone_number', 'user_id'];
    // protected $hidden = [];
    // protected $dates = [];

    /*
    |--------------------------------------------------------------------------
    | FUNCTIONS
    |--------------------------------------------------------------------------
    */

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting(function ($obj) {
            Storage::disk('public')->delete($obj->profile_picture);
        });
    }

    /*
    |--------------------------------------------------------------------------
    | RELATIONS
    |--------------------------------------------------------------------------
    */

    public function articles()
    {
        return $this->hasMany('App\Models\Post', 'author_id');
    }

    public function educations()
    {
        return $this->hasMany('App\Models\Education', 'user_id');
    }

    public function hobbies()
    {
        return $this->hasMany('App\Models\Hobbies', 'user_id');
    }

    public function posts()
    {
        return $this->hasMany('App\Models\Posts', 'author_id', 'id');
    }

    public function projects()
    {
        return $this->hasMany('App\Models\Projects', 'user_id');
    }

    public function skills()
    {
        return $this->hasMany('App\Models\Skills', 'user_id');
    }

    public function socials()
    {
        return $this->hasMany('App\Models\Social', 'user_id');
    }

    public function specialSkills()
    {
        return $this->hasMany('App\Models\EpicSkills', 'user_id');
    }

    public function works()
    {
        return $this->hasMany('App\Models\Work', 'user_id');
    }

    /*
    |--------------------------------------------------------------------------
    | SCOPES
    |--------------------------------------------------------------------------
    */

    /*
    |--------------------------------------------------------------------------
    | ACCESORS
    |--------------------------------------------------------------------------
    */

    public function getFullNameAttribute()
    {
        return $this->attributes['first_name'] . ' ' . $this->attributes['other_name']. ' ' . $this->attributes['last_name'];
    }

    /*
    |--------------------------------------------------------------------------
    | MUTATORS
    |--------------------------------------------------------------------------
    */

    public function setProfilePictureAttribute($value)
    {
        // set attribute's name
        $attributeName = 'profile_picture';

        $this->attributes[$attributeName] = Helper::localImageUpload($this->attributes, $attributeName, 'public', '/images/profile_picture', $value);
    }

}
